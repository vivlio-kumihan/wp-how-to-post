import { MergedConfig, WebbookEntryConfig } from '../input/config.js';
import type { PublicationManifest } from '../schema/publication.schema.js';
export declare function prepareWebPublicationDirectory({ outputDir, }: {
    outputDir: string;
}): Promise<void>;
export declare function retrieveWebbookEntry({ webbookEntryUrl, outputDir, }: WebbookEntryConfig & {
    outputDir: string;
}): Promise<{
    entryHtmlFile: string;
    manifest: PublicationManifest | null;
}>;
export declare function supplyWebPublicationManifestForWebbook({ entryHtmlFile, outputDir, ...config }: Pick<MergedConfig, 'language' | 'title' | 'author' | 'readingProgression'> & {
    entryHtmlFile: string;
    outputDir: string;
}): Promise<PublicationManifest>;
export declare function copyWebPublicationAssets({ exportAliases, outputs, copyAsset, manifestPath, input, outputDir, }: Pick<MergedConfig, 'exportAliases' | 'outputs' | 'copyAsset'> & {
    input: string;
    outputDir: string;
    manifestPath: string;
}): Promise<PublicationManifest>;
//# sourceMappingURL=webbook.d.ts.map